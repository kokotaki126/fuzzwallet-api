// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WalletUser {
  id                 BigInt        @id @default(autoincrement())
  insertedAt         DateTime      @default(now())
  updatedAt          DateTime      @default(now()) @updatedAt
  telegramUser       TelegramUser?
  passKey            PassKey[]
  googleUser         GoogleUser?
  platformAddress    String        @map("platform_address")
  platformPrivateKey String        @map("platform_private_key")
  multiSigAddress    String?       @map("multi_sig_address")

  @@map("wallet_user")
}

model TelegramUser {
  id           BigInt     @id @default(autoincrement())
  tgId         BigInt     @unique @map("tg_id")
  firstName    String     @map("first_name")
  lastName     String     @map("last_name")
  username     String
  insertedAt   DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  address      String
  privateKey   String
  walletUser   WalletUser @relation(fields: [walletUserId], references: [id])
  walletUserId BigInt     @unique @map("wallet_user_id")

  @@map("telegram_user")
}

model PassKey {
  id           BigInt     @id @default(autoincrement())
  insertedAt   DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  address      String
  publicKey    String     @unique
  credential   String
  walletUser   WalletUser @relation(fields: [walletUserId], references: [id])
  walletUserId BigInt     @map("wallet_user_id")

  @@map("pass_key")
}

model GoogleUser {
  id           BigInt     @id @default(autoincrement())
  email        String     @unique
  insertedAt   DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  address      String
  walletUser   WalletUser @relation(fields: [walletUserId], references: [id])
  walletUserId BigInt     @unique @map("wallet_user_id")

  @@map("google_user")
}
